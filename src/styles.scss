@use '@angular/material' as mat;
@import './node_modules/highlight.js/scss/idea';

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-typography-config());`
@include mat.all-component-typographies();
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$workspace-primary: mat.define-palette(mat.$green-palette);
$workspace-accent: mat.define-palette(mat.$purple-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$workspace-warn: mat.define-palette(mat.$red-palette);

// Create the theme object (a Sass map containing all of the palettes).
$workspace-theme: mat.define-light-theme($workspace-primary, $workspace-accent, $workspace-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
//@include mat.all-component-themes($workspace-theme);

@include mat.core-theme($workspace-theme);
@include mat.divider-theme($workspace-theme);
//@include mat.progress-spinner-theme($workspace-theme);
@include mat.toolbar-theme(mat.define-light-theme(
    mat.define-palette(mat.$blue-gray-palette, 600),
    mat.define-palette(mat.$deep-orange-palette),
    mat.define-palette(mat.$green-palette)
));
@include mat.snack-bar-theme(mat.define-light-theme(
    mat.define-palette(mat.$blue-grey-palette),
    mat.define-palette(mat.$blue-grey-palette),
    mat.define-palette(mat.$green-palette)
));
@include mat.button-theme(mat.define-light-theme(
    mat.define-palette(mat.$blue-grey-palette),
    mat.define-palette(mat.$blue-grey-palette),
    mat.define-palette(mat.$green-palette)
));
@include mat.button-theme( mat.define-light-theme(
    mat.define-palette(mat.$blue-palette, 800),
    mat.define-palette(mat.$orange-palette, 900),
    mat.define-palette(mat.$green-palette)
));
@include mat.fab-theme( mat.define-light-theme(
    mat.define-palette(mat.$blue-palette, 800),
    mat.define-palette(mat.$orange-palette, 900),
    mat.define-palette(mat.$green-palette)
));
@include mat.icon-button-theme( mat.define-light-theme(
    mat.define-palette(mat.$blue-palette, 800),
    mat.define-palette(mat.$orange-palette, 900),
    mat.define-palette(mat.$green-palette)
));
@include mat.card-theme($workspace-theme);

@include mat.tabs-theme(mat.define-light-theme(
    mat.define-palette(mat.$blue-grey-palette, 100),
    mat.define-palette(mat.$blue-grey-palette, 900),
    mat.define-palette(mat.$green-palette)
));


/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body {
  margin: 0px;
  overflow-x: hidden;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  background-color: mat.get-color-from-palette(mat.$gray-palette, 200);
}

.p3x-ng-http-pre {
  overflow: auto;
}
